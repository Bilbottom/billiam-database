---
version: 2

models:
  - name: stg__daily_tracker
    description: '{{ doc("stg__daily_tracker") }}'
    meta:
      source: >
        [https://github.com/Bilbottom/daily-tracker](https://github.com/Bilbottom/daily-tracker)
    columns:
      - name: date_time
        data_type: timestamp
        description: >
          The local timestamp that the entry was recorded for.

          The local timestamp isn't recorded, but it can be assumed to be GMT
          (and BST over the Summertime).
        data_tests:
          - unique
          - not_null
      - name: project
        data_type: text
        description: >
          The task (project) that was being worked on at the timestamp.
        data_tests:
          - not_null
      - name: detail
        data_type: text
        description: >
          Additional details about the task that was being worked on at the
          timestamp.
        data_tests:
          - not_null
      - name: minutes
        data_type: integer
        description: >
          The time, in minutes, between entries.

          Note that this will never be a true measure of how much time is spent
          on a task since additional things can happen _between_ entries, and
          the interval over which this should be correspond to is ambiguous.

          That is, an interval of 15 minutes on an entry recorded at 10:00 could
          mean any of the following:

          - The entry corresponds to the last 15 minutes, 09:45 to 10:00.

          - The entry corresponds to the following 15 minutes, 10:00 to 10:15.

          - The entry corresponds to the surrounding 15 minutes, 09:52:30 to
            10:07:30.

          - The entry has over-stated how much time was spent on the task
            because time was spent on other tasks before 10:00 and after 10:00.
        data_tests:
          - not_null
      - name: company
        data_type: text
        description: >
          The employer at the time of recording.

          In a future iteration of this project, this will instead be captured
          in a seed with the from- and to- employment dates.
        data_tests:
          - not_null
          - accepted_values:
              values: ["TSB", "Jaja", "Allica", "Sainsbury''s"]

  - name: stg__finances
    description: '{{ doc("stg__finances") }}'
    columns:
      - name: row_id
        data_type: integer
        description: A generated identifier to uniquely identify rows.
        data_tests:
          - unique
          - not_null
      - name: transaction_id
        data_type: integer
        description: The transaction identifier.
        data_tests:
          - not_null
      - name: transaction_date
        data_type: date
        description: >
          The date of the transaction.

          This will be when the transaction initiation happened in the local
          timezone (which isn't recorded), not when the money was physically
          moved (where there's a difference).
        data_tests:
          - not_null
      - name: item
        data_type: text
        description: The name of the item.
        data_tests:
          - not_null
      - name: cost
        data_type: decimal(18, 3)
        description: >
          The value, in pounds sterling (Â£), of the item.

          A positive value represents money sent to someone else, and a negative
          value represents money sent to me (or is a discount, etc).
        data_tests:
          - not_null
      - name: category
        data_type: text
        description: The category of the item.
        data_tests:
          - not_null
      - name: counterparty
        data_type: text
        description: >
          The corresponding retailer for the transaction.

          Note that this can also be a person (where the transaction is between
          me and someone else), and will always be the entity that I transacted
          with directly (so a third party will not be shown here).
        data_tests:
          - not_null
      - name: payment_method
        data_type: text
        description: The method used to pay for the transaction.
        data_tests:
          - not_null
      - name: exclusion_flag
        data_type: boolean
        description: Whether to exclude the item from reporting.
        data_tests:
          - not_null
      - name: reimbursement_transaction_id
        data_type: integer
        description: The transaction ID of the transaction that this repays.
        data_tests:
          - relationships:
              to: ref("stg__finances")
              field: transaction_id
              config:
                where: "reimbursement_transaction_id IS NOT NULL"

  - name: stg__monzo_transactions
    description: '{{ doc("stg__monzo_transactions") }}'
    columns:
      - name: transaction_id
        data_type: text
        description: The unique identifier for each transaction.
        data_tests:
          - unique
          - not_null
      - name: transaction_date
        data_type: date
        description: The date of the transaction.
        data_tests:
          - not_null
      - name: transaction_time
        data_type: time
        description: The time of the transaction.
        data_tests:
          - not_null
      - name: type
        data_type: text
        description: >
          The type of transaction.

          This is typically to distinguish between transaction methods, such as
          internal transfers (`Pot transfer`) and payment schemes like faster
          payments (`Faster payment`).
        data_tests:
          - not_null
      - name: counterparty
        data_type: text
        description: >
          The counterparty of the transaction.

          This is usually the name of the retailer, but can also be a person or
          the name of an internal pot.
      - name: emoji
        data_type: text
        description: The emoji associated with the transaction.
      - name: category
        data_type: text
        description: >
          The category of the transaction.

          These are the categories defined and set on the transactions in the
          Monzo app.
      - name: cost
        data_type: decimal(18, 2)
        description: >
          The value of the transaction.

          A positive value represents money sent to someone else, and a negative
          value represents money sent to me.
      - name: currency
        data_type: text
        description: The currency of the transaction (ISO 4217).
      - name: local_cost
        data_type: decimal(18, 2)
        description: The value of the transaction in the local currency.
      - name: local_currency
        data_type: text
        description: The local currency of the transaction (ISO 4217).
      - name: notes
        data_type: text
        description: >
          The notes associated with the transaction.

          This is usually the transaction reference, but Monzo allows users to
          add their own additional notes and hashtags.
      - name: address
        data_type: text
        description: The address where the transaction took place.
      - name: receipt
        data_type: blob
        description: >
          The receipt associated with the transaction, if one has been attached.
      - name: description
        data_type: text
        description: The description of the transaction generated by Monzo.
      - name: category_split
        data_type: text
        description: >
          The category split of the transaction.

          I don't actually know what this is.
