---
ci:
  autoupdate_schedule: quarterly
  skip:
    - poetry-lock
    - sqlfluff-lint
    - dbt-compile
    - dbt-docs
    - dbt-unit-test

default_install_hook_types: ["pre-commit", "pre-push"]
default_stages: ["pre-commit"]

repos:
  - repo: meta
    hooks:
      - id: identity

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: no-commit-to-branch
        name: Don't allow commits to the main branch
        args: ["--branch", "main"]
      - id: trailing-whitespace
        name: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Ensure files end with a newline character
        exclude_types: ["svg"]
      - id: mixed-line-ending
        name: Align mixed line ending
      - id: check-added-large-files
        name: Check for large files
      - id: check-json
        name: Check JSON files are valid and parseable
      - id: check-yaml
        name: Check YAML files are valid and parseable
      - id: check-toml
        name: Check TOML files are valid and parseable
      - id: check-ast
        name: Validate Python

  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
      - id: poetry-check
        name: Check that the Poetry configuration is valid
      - id: poetry-lock
        name: Check that the lock file is up-to-date

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Make code pretty

  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.5
    hooks:
      - id: sqlfluff-lint
        name: Lint SQL files
        files: "^billiam_database/models/.*.sql$"
        additional_dependencies:
          - duckdb==0.9.2
          - dbt-duckdb==1.7.3
          - sqlfluff-templater-dbt

  # Testing and coverage
  - repo: local
    hooks:
      - id: dbt-compile
        name: Compile the dbt project
        entry: dotenv run -- dbt compile
        language: system
        pass_filenames: false
        always_run: true
        stages: ["pre-push"]
      - id: dbt-docs
        name: Compile the dbt docs
        entry: dotenv run -- dbt docs generate
        language: system
        pass_filenames: false
        always_run: true
        stages: ["pre-push"]
      - id: dbt-unit-test
        name: Run dbt unit tests
        entry: dotenv run -- dbt test --select tag:unit-test
        language: system
        pass_filenames: false
        always_run: true
        stages: ["pre-push"]
